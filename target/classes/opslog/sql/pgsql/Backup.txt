Backup and Recovery
These processes are vital for data protection and business continuity.

Logical Backups:

pg_dump:
Used to take backups of individual databases or specific database objects (tables, schemas).
It generates a text or archive file with SQL commands to recreate the database.

Advantages:
Portable,
can be easily restored on different versions or instances of PostgreSQL.

sh
pg_dump -U username -d database_name -F c -f backup_file.dump
Physical Backups:

pg_basebackup: 
Used to create a physical copy of the entire database cluster, 
including all data files and transaction logs.

Advantages:
Faster to restore,
retains the exact state of the database at the backup time.

sh
pg_basebackup -U username -D backup_directory -F tar
Point-in-Time Recovery (PITR):

Allows you to restore the database to a specific point in time,
using a combination of base backups and Write-Ahead Logs (WALs). 
Useful for recovering from logical errors like accidental data deletion.

Steps:

Take a base backup.

Continuously archive WAL files.

In case of a failure, 
restore the base backup and replay the necessary WAL files up to the desired point in time.

sh
# Restore base backup
tar -xf backup.tar -C /path/to/data

# Restore WAL files
cp /path/to/wal_archive/* /path/to/data/pg_wal/